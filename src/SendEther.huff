 
/** 
 *  SEND_ETHER HUFF EXERCISE
 *  
 *  The task is to enable this contract, when called with function `sendEther(address)` to
 *  transfer the value sent with the call to the address in the argument.
 *
 *  NOTICE: The contract should revert when an unrecognized function is called
 */

 #define function sendEther(address) payable returns()

 #define macro SEND_ETHER() = takes(0) returns(0) {
    0x00                     // [retSize]
    0x00                     // [retOffset, retSize]
    0x20                     // [argSize, retOffset, retSize]
    0x04                     // [argOffset, argSize, retOffset, retSize]
    callvalue                // [value, argOffset, argSize, retOffset, retSize]
    0x04 calldataload        // [to, value, argOffset, argSize, retOffset, retSize]
    0x6000                   // [gas, to, value, argOffset, argSize, retOffset, retSize]
    call                     // [success]
    stop
 }


 #define macro MAIN() = takes(0) returns(0) {
    0x00 calldataload 0xe0 shr           

    __FUNC_SIG(sendEther) eq  
    sendEther jumpi     

    0x00 0x00 revert

    sendEther:
        SEND_ETHER()
 }